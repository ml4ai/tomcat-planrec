(define (domain dom_noLang)
        (:requirements :negative-preconditions :typing :hierarchy)
        (:types
                human - object
                victim - object
                location - object
                player - object
                rubble - object
        )

        (:predicates
                (rescued ?arg0 - victim)
                (can_be_carried ?arg0 - victim)
                (retrieved ?arg0 - victim)
                (healed ?arg0 - victim)
                (marked ?arg0 - victim)
                (blocked ?arg0 - location)
                (at ?arg0 - human ?arg1 - location)
                (free ?arg0 - player)
                (present ?arg0 - rubble ?arg1 - location)
                (cleaned ?arg0 - room)
        )


; ----------------------------------------------------------------------

        (:task go_mark_victim
                :parameters (?p_1 - player
                             ?v - victim
                             ?pos - location ?room - location)
        )

        (:task go_break_rubble
                :parameters (?p_1 - player
                             ?rocks - rubble
                             ?pos - location ?room - location)
        )
     
        (:task gather_teammate
                :parameters (?p_1 - player ?p_2 - player ?p_3 - player
                             ?pos1 ?pos2 ?pos3 - location ?room - location)
        )

        (:task go_triage_victim
                :parameters (?p_1 - player ?v - victim
                             ?pos ?room - location)
        )

        (:task go_pickup_victim
                :parameters (?p_1 - player ?v - victim
                             ?pos ?room - location)
        )

        (:task transport_victim
                :parameters (?p_1 - player ?v - victim
                             ?pos ?room - location)
        )

        (:task go_transport_victim
                :parameters (?p_1 - player ?v - victim
                             ?pos ?room ?final - location)
        )   

        (:method m_go_transport_victim
                :parameters ( ?p_1 - player ?v - victim
                               ?pos ?room ?final - location)
                :task (go_transport_victim ?p_1 ?v ?pos ?room ?final)
                :precondition (and (at ?p_1 ?pos)
                                   (at ?v ?room))
                :ordered-subtasks (and
                    (location ?p_1 ?pos ?room)
                    (pickup_victim ?p_1 ?v ?room)
                    (carry_location ?p_1 ?v ?room ?final)
                    (place_victim ?p_1 ?v ?final))
        ) 

        (:method m_transport_victim
          ;not the same as evacution or rescue.
          ;not the same as come_transport_victim either.
                :parameters (?p_1 - player ?v - victim
                             ?pos ?room - location)
                :task (transport_victim ?p_1 ?v ?pos ?room)
                :precondition (and (at ?p_1 ?pos) 
                                   (at ?v ?pos)
                                   (retrieved ?v))
                :ordered-subtasks (and
                    (carry_location ?p_1 ?v ?pos ?room)
                    (place_victim ?p_1 ?v ?room))
        )

        (:method m_go_pickup_victim
                :parameters (?p_1 - player ?v - victim
                             ?pos ?room - location)
                :task (go_pickup_victim ?p_1 ?v ?pos ?room)
                :precondition (and (at ?v ?room) (at ?p_1 ?pos)
                                   (not (at ?p_1 ?room)))
                :ordered-subtasks (and
                    (location ?p_1 ?pos ?room)
                    (pickup_victim ?p_1 ?v ?room))
        )

        (:method m_go_triage_victim
                :parameters (?p_1 - player ?v - victim
                             ?pos ?room - location)
                :task (go_triage_victim ?p_1 ?v ?pos ?room)
                :precondition (and (at ?v ?room)
                                   (at ?p_1 ?pos)
                                   (not (healed ?v)))
                :ordered-subtasks (and
                    (location ?p_1 ?pos ?room)
                    (triage_victim ?p_1 ?v ?room))
        )

        (:method m_go_mark_victim
                :parameters (?p_1 - player
                             ?v - victim
                             ?pos - location ?room - location)
                :task (go_mark_victim ?p_1 ?v ?pos ?room)
                :precondition (at ?p_1 ?pos)
                :ordered-subtasks (and
                   (location ?p_1 ?pos ?room)
                   (mark_victim ?p_1 ?v ?room))
        )

        (:method m_go_break_rubble
                :parameters (?p_1 - player
                             ?rocks - rubble
                             ?pos - location ?room - location)
                :task (go_break_rubble ?p_1 ?rocks ?pos ?room)
                :precondition (and (at ?p_1 ?pos)
                                   (present ?rocks ?room))
                :ordered-subtasks (and
                   (location ?p_1 ?pos ?room)
                   (rubble_destroyed ?p_1 ?rocks ?room))
        )

        (:method m_gather_full_team
                :parameters (?p_1 ?p_2 ?p_3 - player
                             ?pos1 ?pos2 ?pos3 ?room - location)
                :task (gather_teammate ?p_1 ?p_2 ?p_3 ?pos1 ?pos2 ?pos3 ?room)
                :precondition ()
                :ordered-subtasks (and
                      (location ?p_1 ?pos1 ?room)
                      (location ?p_2 ?pos2 ?room)
                      (location ?p_3 ?pos3 ?room))
       )

;-----------------------------------------------------------------------
        (:action place_victim
         ;observations/events/player/victim_placed
                :parameters (?p_1 - player ?v - victim 
                             ?room - location)
                :precondition (and (at ?p_1 ?room)
                                   (at ?v ?room)
                                   (retrieved ?v))
                :effect (not (retrieved ?v))
        )

        (:action pickup_victim
         ;observations/events/player/victim_picked_up
                :parameters (?p_1 - player ?v - victim 
                             ?room - location)
                :precondition (and (at ?p_1 ?room)
                                   (at ?v ?room))
                :effect (retrieved ?v)
        )

        (:action triage_victim
         ;observations/events/player/triage
                :parameters (?p_1 - player 
                             ?v - victim
                             ?room - location)
                :precondition (and (not (healed ?v))
                                   (at ?v ?room)
                                  (at ?p_1 ?room))
                :effect (healed ?v)
        )

        (:action rubble_destroyed
         ;observations/events/player/rubble_destroyed
                :parameters (?p_1 - player
                             ?rocks - rubble
                             ?room - location)
                :precondition (and (at ?p_1 ?room)
                                   (present ?rocks ?room))
                :effect (not (present ?rocks ?room))
        )

        (:action carry_location
         ;observations/events/player/location
         ;observations/events/player/victim_placed
         ;when a player changes room carrying a victim
             :parameters (?p_1 - player ?v - victim
                          ?pos ?room - location)
             :precondition (and (at ?p_1 ?pos)
                                (at ?v ?pos) 
                                (retrieved ?v))
             :effect (and (at ?p_1 ?room) 
                          (at ?v ?room)
                          (not (at ?p_1 ?pos))
                          (not (at ?v pos)))
        )

        (:action location
         ;observations/events/player/location
         ;when a player changes room
             :parameters (?p_1 - player
                          ?pos - location
                          ?room - location)
             :precondition (at ?p_1 ?pos)
             :effect (and (at ?p_1 ?room)
                          (not (at ?p_1 ?pos)))
        )

        (:action mark_victim
         ; Events reflected: aggregated 'Marker'
                :parameters (?p_1 - player
                             ?v - victim
                             ?room - location)
                :precondition (and (at ?v ?room)
                                   (at ?p_1 ?room))
                :effect (marked ?v)
        )
); end domain definition
