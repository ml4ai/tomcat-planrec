(define (domain question_2)
        (:requirements :negative-preconditions :typing :hierarchy)
        (:types
                victim - object
                critical - victim
                location - object
                player - object
        )

        (:predicates
                (rescued ?arg0 - victim)
                (can_be_carried ?arg0 - victim)
                (healed ?arg0 - victim)
                (marked ?arg0 - victim)
                (unmarked ?arg0 - victim)
                (at ?arg0 - victim ?arg1 - location)
                (positioned ?arg0 - player ?arg1 - location)
                (lost ?arg0 - player)
        )

        (:task collaborate_carry_stabilized
                :parameters (?qu - player ?an - player 
                             ?v - victim 
                             ?l1 - location ?l2 - location)
        )

        (:task collaborate_critical_wake
                :parameters (?qu - player ?an - player
                              ?v - victim
                             ?l1 - location ?l2 - location)
        )

        (:method m_come_wake_critical_768
                :parameters (?qu - player ?an - player
                              ?v - victim
                             ?l1 - location ?l2 - location)
                :task (collaborate_critical_wake ?qu ?an ?v ?l1 ?l2)
                :precondition (not (healed ?v))
                :ordered-subtasks (and 
                        (clarify_critical_loc_7 ?qu ?v ?l1)
                        (request_destination_6 ?qu ?an ?l1 ?l2)
                        (wake_critical_8 ?qu ?an ?v ?l2))
        )

;        (:method m_come_here_wake-769
;                :parameters (?qu - player ?an - player
;                              ?v - victim
;                             ?l1 - location ?l2 - location)
;                :task (?qu ?an ?v ?l1 ?l2)
;                :precondition (not (healed ?v))
;                :ordered-subtasks (and ()
;                                  )
;        )

        (:method m_carry_unmarked_stabilized_1234
                :parameters (?qu - player 
                             ?v - victim 
                             ?l1 - location ?l2 - location)
                :task (collaborate_carry_stabilized ?qu ?v ?l1 ?l2)
                :precondition (and (healed ?v)
                                   (unmarked ?v))
                :ordered-subtasks (and 
                         (request_marker_1 ?v)
                         (mark_victim_2)
                         (request_carry_stabilized_3 ?qu ?v ?l1)
                         (carry_stabilized_4 ?qu ?v ?l2)) 
        ) ;end m134

        (:method m_carry_stabilized_34
                :parameters (?qu - player 
                             ?v - victim 
                             ?l1 - location ?l2 - location)
                :task (collaborate_carry_stabilized ?qu ?v ?l1 ?l2)
                :precondition (and (marked ?v) 
                                   (healed ?v))
                :ordered-subtasks (and 
                         (request_carry_stabilized_3 ?qu ?v ?l1)
                         (carry_stabilized_4 ?qu ?v ?l1 ?l2)) 
        );end m34

        (:method m_come_carry_stabilized_5634
                :parameters(?qu - player ?an - player
                            ?v - victim
                            ?l1 - location ?l2 - location)
                :task (collaborate_carry_stabilized ?qu ?an ?v ?l1 ?l2)
                :precondition (healed ?v)
                :ordered-subtasks (and 
                         (ask_loc_teammate_5 ?qu ?an ?l1 ?l2)
                         (request_destination_6 ?qu ?an ?l1 ?l2)
                         (request_carry_stabilized_3 ?qu ?v ?l1)
                         (carry_stabilized_4 ?qu ?v ?l1 ?l2)) 
        ); end m5634

        (:action request_marker_1
                :parameters (?v - victim)
                :precondition (unmarked ?v)
                :effect ()
        )

        (:action mark_victim_2
                :parameters (?v - victim)
                :precondition ()
                :effect (marked ?v)
        )

        (:action request_carry_stabilized_3
                :parameters (?qu - player 
                             ?v - victim 
                             ?l1 - location)
                :precondition (and (marked ?v)
                                   (healed ?v))
                :effect (and (can_be_carried ?v)
                             (at ?v ?l1)
                             (not (lost ?qu))
                             (positioned ?qu ?l1))
        )

        (:action carry_stabilized_4
                :parameters (?an - player 
                             ?v - victim 
                             ?l1 - location ?l2 - location)
                :precondition (and (healed ?v)
                                   (marked ?v)
                                   (can_be_carried ?v)
                                   (at ?v ?l1)
                                   (positioned ?an ?l1))
                :effect (and (at ?v ?l2) 
                             (rescued ?v)
                             (not (at ?v ?l1))
                             (positioned ?an ?l2)
                             (not (positioned ?an ?l2)))
        )

        (:action ask_loc_teammate_5
                :parameters (?qu - player ?an - player
                             ?l1 - location ?l2 - location)
                :precondition (lost ?an)
                :effect (and (positioned ?an ?l1)
                             (positioned ?qu ?l2)
                             (not (lost ?an)))
        ; the logic is that if asked, they are in different areas
        )

        (:action request_destination_6
                :parameters (?qu - player ?an - player
                             ?l1 - location ?l2 - location)
                :precondition (and
                         (positioned ?qu ?l2)
                         (positioned ?an ?l1))
;                         (not (positioned ?qu ?l1))
;                         (not (positioned ?an ?l2)))
                :effect (and (positioned ?an ?l2)
                             (not (positioned ?an ?l1)))
        )

        (:action clarify_critical_loc_7
                :parameters (?qu - player 
                              ?v - victim
                              ?l2 - location)
                :precondition (not (healed ?v))
                :effect (and (at ?v ?l2)
                            (positioned ?qu ?l2))
        )

        (:action wake_critical_8
                :parameters (?qu - player ?an - player
                              ?v - victim
                             ?l2 - location)
                :precondition (and (not (healed ?v))
                                   (positioned ?qu ?l2)
                                   (positioned ?an ?l2))
                :effect (healed ?v)
        )
);end define domain
