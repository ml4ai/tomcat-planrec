(define (domain dom_noLang)
        (:requirements :negative-preconditions :typing :hierarchy)
        (:types
                victim - object
                location - object
                start - location
                dest - location
                sickbay - location
                player - object
                rubble - object
        )

        (:predicates
                (rescued ?arg0 - victim)
                (can_be_carried ?arg0 - victim)
                (healed ?arg0 - victim)
                (marked ?arg0 - victim)
                (blocked ?arg0 - dest)
                (at ?arg0 - victim ?arg1 - dest)
                (positioned ?arg0 - player ?arg1 - start)
                (free ?arg0 - player)
                (present ?arg0 - rubble ?arg1 - dest)
                (cleaned ?arg0 - room)
        )

        (:task clearing_room
                :parameters (?p_2 - player
                             ?rocks - rubble
                             ?room - dest)
        )

        (:task collaborate_carry_stabilized
                :parameters (?p_1 - player ?p_2 - player 
                             ?v - victim 
                             ?room - dest ?end - sickbay)
        )

        (:task collaborate_critical_wake
                :parameters (?p_1 - player ?p_2 - player
                             ?v - victim
                             ?pos - start ?room - dest)
        )

        (:task call_teammate
                :parameters (?p_1 - player ?p_2 - player
                             ?pos - start ?room - dest)
        )

        (:task megaTask
                :parameters (?p_1 - player ?p_2 - player
                             ?v - victim
                             ?rocks - rubble
                             ?pos - start ?room - dest ?end - sickbay)
        )

        (:method megaMethod
                :parameters (?p_1 - player ?p_2 - player
                             ?v - victim
                             ?rocks - rubble
                             ?pos - start ?room - dest ?end - sickbay)
                :task (megaTask ?p_1 ?p_2 ?v ?rocks ?pos ?room ?end)
                :precondition (free ?p_2)
                :ordered-subtasks (and
                   (call_teammate ?p_1 ?p_2 ?pos ?room)
                   (clearing_room ?p_2 ?rocks ?room)
                   (collaborate_critical_wake ?p_1 ?p_2 ?v ?pos ?room)
		   (collaborate_carry_stabilized ?p_1 ?p_2 ?v ?room ?end))
        )

        (:method m_clear_one_room
                :parameters (?p_2 - player
                            ?rocks - rubble
                            ?room - dest)
                :task (clearing_room ?p_2 ?rocks ?room)
                :precondition (and (blocked ?room)
                                   (present ?rocks ?room))
                :ordered-subtasks (and
                        (approach_rubble ?p_2 ?rocks ?room)
                        (clear_room_rubble ?p_2 ?rocks ?room))
        )

        (:method m_come_wake_critical_768
                :parameters (?p_1 - player ?p_2 - player
                              ?v - victim
                             ?pos - start ?room - dest)
                :task (collaborate_critical_wake ?p_1 ?p_2 ?v ?pos ?room)
                :precondition (not (healed ?v))
                :ordered-subtasks (and 
                        (locate_critical ?p_1 ?v ?room)
                        (gather_teammate ?p_1 ?p_2 ?pos ?room)
                        (wake_critical ?p_1 ?p_2 ?v ?room))
        )

        (:method m_carry_unmarked_stabilized_1234
                :parameters (?p_1 - player ?p_2 - player
                             ?v - victim 
                             ?room - dest ?end - sickbay)
                :task (collaborate_carry_stabilized ?p_1 ?p_2 ?v ?room ?end)
                :precondition (and (healed ?v)
                                   (not (marked ?v)))
                :ordered-subtasks (and 
                         (find_victim ?p_1 ?v ?room)
                         (mark_victim ?p_1 ?v ?room)
                         (select_vic_to_carry ?p_1 ?v ?room)
                         (carry_stabilized ?p_2 ?v ?room ?end)) 
        )

        (:method m_carry_stabilized4
                :parameters (?p_1 - player 
                             ?p_2 - player
                             ?v - victim 
                             ?room - dest ?end - sickbay)
                :task (collaborate_carry_stabilized ?p_1 ?p_2 ?v ?room ?end)
                :precondition (and (marked ?v) 
                                   (healed ?v))
                :ordered-subtasks (and 
                         (select_vic_to_carry ?p_1 ?v ?room)
                         (carry_stabilized ?p_2 ?v ?room ?end)) 
        )

        (:method m_collaborate_team_56
                :parameters(?p_1 - player ?p_2 - player
                            ?pos - start ?room - dest)
                :task (call_teammate ?p_1 ?p_2 ?pos ?room)
                :precondition (free ?p_2)
                :ordered-subtasks (and 
                         (locate_teammate ?p_1 ?p_2 ?pos ?room)
                         (gather_teammate ?p_1 ?p_2 ?pos ?room))
        )

        (:action find_victim
                :parameters (?p_1 - player
                             ?v - victim
                             ?room - dest)
                :precondition (not (marked ?v))
                :effect (and (at ?v ?room)
                             (positioned ?p_1 ?room))
        )

        (:action mark_victim
                :parameters (?p_1 - player
                             ?v - victim
                             ?room - dest)
                :precondition (and (at ?v ?room) (positioned ?p_1 ?room))
                :effect (marked ?v)
        )

        (:action select_vic_to_carry
                :parameters (?p_1 - player 
                             ?v - victim 
                             ?room - dest)
                :precondition (and (marked ?v)
                                   (healed ?v))
                :effect (and (can_be_carried ?v)
                             (at ?v ?room)
                             (not (free ?p_1))
                             (positioned ?p_1 ?room))
        )

        (:action carry_stabilized
                :parameters (?p_2 - player 
                             ?v - victim 
                             ?room - dest ?end - sickbay)
                :precondition (and (healed ?v)
                                   (marked ?v)
                                   (can_be_carried ?v)
                                   (at ?v ?room)
                                   (positioned ?p_2 ?room))
                :effect (and (at ?v ?end) 
                             (rescued ?v)
                             (not (at ?v ?room))
                             (positioned ?p_2 ?end)
                             (free ?p_2)
                             (not (positioned ?p_2 ?room)))
        )

        (:action locate_teammate
                :parameters (?p_1 - player ?p_2 - player
                             ?pos - start ?room - dest)
                :precondition (free ?p_2)
         :effect (positioned ?p_1 ?room)
;old                :effect (and (positioned ?p_2 ?pos)
;old                             (positioned ?p_1 ?room)
;old                             (not (free ?p_2)))
        ; the logic is that if asked, they are in different areas
        ; the asker is then assumed to be in destination of interest
        ; the answerer remains free since they were not beckoned
        )

        (:action gather_teammate
        ; player 2 is summoned, no longer free and no longer at the 
        ;   location they were in before being summoned. This action 
        ;   does not reflect language or ability to reject/accept.
                :parameters (?p_1 - player ?p_2 - player
                             ?pos - start ?room - dest)
                :precondition (positioned ?p_1 ?room)
                :effect (and (positioned ?p_2 ?room)
                             (not (free ?p_2))
                             (not (positioned ?p_2 ?pos)))
        )

        (:action locate_critical
                :parameters (?p_1 - player 
                             ?v - victim
                             ?room - dest)
                :precondition (and (not (healed ?v))
                                   (at ?v ?room))
                :effect (positioned ?p_1 ?room)
        )

        (:action wake_critical
                :parameters (?p_1 - player ?p_2 - player
                             ?v - victim
                             ?room - dest)
                :precondition (and (not (healed ?v))
                                   (at ?v ?room)
                                   (positioned ?p_1 ?room)
                                   (positioned ?p_2 ?room))
                :effect (healed ?v)
        )

        (:action approach_rubble
                :parameters (?p_2 - player
                             ?rocks - rubble
                             ?room - dest)
                :precondition (and (blocked ?room)
        ;                           (not (positioned ?p_2 ?room))
                                   (present ?rocks ?room))
                :effect (positioned ?p_2 ?room)
        )

        (:action clear_room_rubble
                :parameters (?p_2 - player
                             ?rocks - rubble
                             ?room - dest)
                :precondition (and (positioned ?p_2 ?room)
                                   (blocked ?room)
                                   (present ?rocks ?room))
                :effect (and (not (blocked ?room))
                             (free ?p_2) 
                             (not (present ?rocks ?room)))
        )
     
; delcare_room_clean should only happen once per room, even with multiple vic.
        (:action declare_room_clean
                :parameters (?v - victim ?room - dest)
                :precondition (not (at ?v ?room))
                :effect (cleaned ?room)
       )
);end define domain
