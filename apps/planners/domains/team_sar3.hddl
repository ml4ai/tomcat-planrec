(define (domain teamSAR)
  (:types
    human location block - object
    rescuer victim - human
    medic engineer transporter - rescuer
  )

  (:predicates
    (at ?p - human ?l - location)
    (holds ?p - rescuer ?v - victim)
    (holding_vic ?p - rescuer)
    (stabilized ?v - victim)
    (awake_crit ?v - victim)
    (broken ?b - block ?l - location)
    (zone_a ?l - location)
    (zone_b ?l - location)
    (zone_c ?l - location)
    (rescue_a ?v - victim)
    (rescue_b ?v - victim)
    (rescue_c ?v - victim)
    (knowledge_of_type_a ?p - rescuer ?v - victim)
    (knowledge_of_type_b ?p - rescuer ?v - victim)
    (knowledge_of_type_c ?p - rescuer ?v - victim)
    (has_sensor_for ?l ?s_l - location)
    (knowledge_of_regs ?p - rescuer ?l - location)
    (knowledge_of_crit ?p - rescuer ?l - location)
  )

  (:f-predicates
    (can_see_reg_vic ?p - rescuer)
    (can_diagnose_vic ?m - medic ?v - victim)
    (can_see_crit_vic ?p - rescuer)
    (can_stabilize_vic ?m - medic ?v - victim)
    (can_wake_vic ?m - medic ?t - rescuer ?v - victim)
    (can_pickup_vic ?p - rescuer ?v - victim)
    (can_break_block ?e - engineer ?b - block)
    (type_a ?v - victim)
    (type_b ?v - victim)
    (type_c ?v - victim)
    (sense_regs ?l - location)
    (sense_crit ?l - location)
  )

  (:action stabilize
    :parameters (?m - medic ?v - victim ?l - location)
    :precondition (and
                    (at ?m ?l)
                  )
    :effect (and
              (stabilized ?v)
              (at ?v ?l)
            )
  )

  (:action wake_crit
    :parameters (?m - medic ?t - rescuer ?v - victim ?l - location)
    :precondition (and
                    (at ?m ?l)
                    (at ?t ?l)
                  )
    :effect (and
              (awake_crit ?v)
              (at ?v ?l)
              (knowledge_of_type_c ?m ?v)
              (knowledge_of_type_c ?t ?v)
            )
  )

  (:action move
    :parameters (?h - rescuer ?old_l ?new_l - location)
    :precondition (and
                    (at ?h ?old_l) 
                  )
    :effect (and
              (not (at ?h ?old_l))
              (at ?h ?new_l)
            )
  )

  (:action break_block
    :parameters (?e - engineer ?b - block ?l - location)
    :precondition (and
                    (at ?e ?l)
                  )
    :effect (and
              (broken ?b ?l)
            )
  )

  (:action pickup_vic
    :parameters (?h - rescuer ?v - victim ?l - location)
    :precondition (and
                    (at ?h ?l)
                    (imply (awake_crit ?v) (stabilized ?v))
                    (not (holding_vic ?h))
                  )
    :effect (and
              (holding_vic ?h)
              (holds ?h ?v)
              (not (at ?v ?l))
            ) 
  )

  (:action put_down_vic
    :parameters (?h - rescuer ?v - victim ?l - location)
    :precondition (and
                    (at ?h ?l)
                    (holding_vic ?h)
                    (holds ?h ?v)
                  )
    :effect (and
              (not (holding_vic ?h))
              (not (holds ?h ?v))
              (at ?v ?l)
            )
  )

  (:action rescue_vic
    :parameters (?h - rescuer ?v - victim ?l - location)
    :precondition (and
                    (at ?h ?l)
                    (holding_vic ?h)
                    (holds ?h ?v)
                    (or (and (type_a ?v) (zone_a ?l))
                        (and (type_b ?v) (zone_b ?l))
                        (and (type_c ?v) (zone_c ?l))
                    )
                  )
    :effect (and
              (at ?v ?l)
              (when (type_a ?v) (rescue_a ?v))
              (when (type_b ?v) (rescue_b ?v))
              (when (type_c ?v) (rescue_c ?v))
            )
  )

  (:action diagnose_vic
    :parameters (?m - medic ?v - victim ?l - location)
    :precondition (and
                    (at ?m ?l)
                  )
    :effect (and
              (when (type_a ?v) (knowledge_of_type_a ?m ?v))
              (when (type_b ?v) (knowledge_of_type_b ?m ?v))
              (when (type_c ?v) (knowledge_of_type_c ?m ?v))
            )
  )

  (:action detect_vics
    :parameters (?t - transporter ?l ?s_l - location)
    :preconditions (and
                     (at ?t ?l)
                     (has_sensor_for ?l ?s_l)
                   )
    :effect (and
              (when (sense_regs ?s_l) (knowledge_of_regs ?t ?s_l)) 
              (when (sense_crit ?s_l) (knowledge_of_crit ?t ?s_l))
            )
  )

  (:action mark_location
    :parameters (?h - rescuer ?l1 ?l2 - location)
    :preconditions (at ?h ?l)
    :effect (and
              (when (marked_location_A ?h ?l1 ?l2) (location_marker_A ?h ?l1 ?l2))
              (when (marked_location_B ?h ?l1 ?l2) (location_marker_B ?h ?l1 ?l2))
              (when (marked_location_NVH ?h ?l1 ?l2) (location_marker_NVH ?h ?l1 ?l2))
              (when (marked_location_CV ?h ?l1 ?l2) (location_marker_CV ?h ?l1 ?l2))
              (when (marked_location_RV ?h ?l1 ?l2) (location_marker_RV ?h ?l1 ?l2))
              (when (marked_location_TR ?h ?l1 ?l2) (location_marker_TR ?h ?l1 ?l2))
              (when (marked_location_R ?h ?l1 ?l2) (location_marker_R ?h ?l1 ?l2))
              (when (marked_location_HMH ?h ?l1 ?l2) (location_marker_HMH ?h ?l1 ?l2))
            )
  )

  (:action mark_victim
    :parameters (?h - rescuer ?l - location ?v - victim)
    :preconditions (at ?h ?l)
    :effect (and
              (when (marked_victim_A ?h ?l ?v) (victim_marker_A ?h ?l ?v))
              (when (marked_victim_B ?h ?l ?v) (victim_marker_B ?h ?l ?v))
              (when (marked_victim_NVH ?h ?l ?v) (victim_marker_NVH ?h ?l ?v))
              (when (marked_victim_CV ?h ?l ?v) (victim_marker_CV ?h ?l ?v))
              (when (marked_victim_RV ?h ?l ?v) (victim_marker_RV ?h ?l ?v))
              (when (marked_victim_TR ?h ?l ?v) (victim_marker_TR ?h ?l ?v))
              (when (marked_victim_R ?h ?l ?v) (victim_marker_R ?h ?l ?v))
              (when (marked_victim_HMH ?h ?l ?v) (victim_marker_HMH ?h ?l ?v))
            )
  )

  (:action replace_mark_location
    :parameters (?h - rescuer ?t - rescuer ?l1 ?l2 - location)
    :preconditions (at ?h ?l)
    :effect (and
              (when (marked_location_A ?h ?l1 ?l2) (location_marker_A ?h ?l1 ?l2))
              (when (marked_location_B ?h ?l1 ?l2) (location_marker_B ?h ?l1 ?l2))
              (when (marked_location_NVH ?h ?l1 ?l2) (location_marker_NVH ?h ?l1 ?l2))
              (when (marked_location_CV ?h ?l1 ?l2) (location_marker_CV ?h ?l1 ?l2))
              (when (marked_location_RV ?h ?l1 ?l2) (location_marker_RV ?h ?l1 ?l2))
              (when (marked_location_TR ?h ?l1 ?l2) (location_marker_TR ?h ?l1 ?l2))
              (when (marked_location_R ?h ?l1 ?l2) (location_marker_R ?h ?l1 ?l2))
              (when (marked_location_HMH ?h ?l1 ?l2) (location_marker_HMH ?h ?l1 ?l2))
              (when (remove_location_A ?t ?l1 ?l2) (not (location_marker_A ?t ?l1 ?l2)))
              (when (remove_location_B ?t ?l1 ?l2) (not (location_marker_B ?t ?l1 ?l2)))
              (when (remove_location_NVH ?t ?l1 ?l2) (not (location_marker_NVH ?t ?l1 ?l2)))
              (when (remove_location_CV ?t ?l1 ?l2) (not (location_marker_CV ?t ?l1 ?l2)))
              (when (remove_location_RV ?t ?l1 ?l2) (not (location_marker_RV ?t ?l1 ?l2)))
              (when (remove_location_TR ?t ?l1 ?l2) (not (location_marker_TR ?t ?l1 ?l2)))
              (when (remove_location_R ?t ?l1 ?l2) (not (location_marker_R ?t ?l1 ?l2)))
              (when (remove_location_HMH ?t ?l1 ?l2) (not (location_marker_HMH ?t ?l1 ?l2)))
            )
  )

  (:action replace_mark_victim
    :parameters (?h - rescuer ?t - rescuer ?l1 ?l2 - location)
    :preconditions (at ?h ?l)
    :effect (and
              (when (marked_victim_A ?h ?l1 ?l2) (victim_marker_A ?h ?l1 ?l2))
              (when (marked_victim_B ?h ?l1 ?l2) (victim_marker_B ?h ?l1 ?l2))
              (when (marked_victim_NVH ?h ?l1 ?l2) (victim_marker_NVH ?h ?l1 ?l2))
              (when (marked_victim_CV ?h ?l1 ?l2) (victim_marker_CV ?h ?l1 ?l2))
              (when (marked_victim_RV ?h ?l1 ?l2) (victim_marker_RV ?h ?l1 ?l2))
              (when (marked_victim_TR ?h ?l1 ?l2) (victim_marker_TR ?h ?l1 ?l2))
              (when (marked_victim_R ?h ?l1 ?l2) (victim_marker_R ?h ?l1 ?l2))
              (when (marked_victim_HMH ?h ?l1 ?l2) (victim_marker_HMH ?h ?l1 ?l2))
              (when (remove_victim_A ?t ?l1 ?l2) (not (victim_marker_A ?t ?l1 ?l2)))
              (when (remove_victim_B ?t ?l1 ?l2) (not (victim_marker_B ?t ?l1 ?l2)))
              (when (remove_victim_NVH ?t ?l1 ?l2) (not (victim_marker_NVH ?t ?l1 ?l2)))
              (when (remove_victim_CV ?t ?l1 ?l2) (not (victim_marker_CV ?t ?l1 ?l2)))
              (when (remove_victim_RV ?t ?l1 ?l2) (not (victim_marker_RV ?t ?l1 ?l2)))
              (when (remove_victim_TR ?t ?l1 ?l2) (not (victim_marker_TR ?t ?l1 ?l2)))
              (when (remove_victim_R ?t ?l1 ?l2) (not (victim_marker_R ?t ?l1 ?l2)))
              (when (remove_victim_HMH ?t ?l1 ?l2) (not (victim_marker_HMH ?t ?l1 ?l2)))
            )
  )


)
